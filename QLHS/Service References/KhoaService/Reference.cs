//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QLHS.KhoaService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KhoaBDO", Namespace="http://schemas.datacontract.org/2004/07/QuanLySinhVienWCF.QuanLySinhVienBDO")]
    [System.SerializableAttribute()]
    public partial class KhoaBDO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaKhoaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TenKhoaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaKhoa {
            get {
                return this.MaKhoaField;
            }
            set {
                if ((object.ReferenceEquals(this.MaKhoaField, value) != true)) {
                    this.MaKhoaField = value;
                    this.RaisePropertyChanged("MaKhoa");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TenKhoa {
            get {
                return this.TenKhoaField;
            }
            set {
                if ((object.ReferenceEquals(this.TenKhoaField, value) != true)) {
                    this.TenKhoaField = value;
                    this.RaisePropertyChanged("TenKhoa");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="KhoaService.IKhoaService")]
    public interface IKhoaService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKhoaService/Add", ReplyAction="http://tempuri.org/IKhoaService/AddResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Exception), Action="http://tempuri.org/IKhoaService/AddExceptionFault", Name="Exception", Namespace="http://schemas.datacontract.org/2004/07/System")]
        bool Add(QLHS.KhoaService.KhoaBDO khoa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKhoaService/Add", ReplyAction="http://tempuri.org/IKhoaService/AddResponse")]
        System.Threading.Tasks.Task<bool> AddAsync(QLHS.KhoaService.KhoaBDO khoa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKhoaService/Update", ReplyAction="http://tempuri.org/IKhoaService/UpdateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Exception), Action="http://tempuri.org/IKhoaService/UpdateExceptionFault", Name="Exception", Namespace="http://schemas.datacontract.org/2004/07/System")]
        bool Update(QLHS.KhoaService.KhoaBDO khoa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKhoaService/Update", ReplyAction="http://tempuri.org/IKhoaService/UpdateResponse")]
        System.Threading.Tasks.Task<bool> UpdateAsync(QLHS.KhoaService.KhoaBDO khoa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKhoaService/Delete", ReplyAction="http://tempuri.org/IKhoaService/DeleteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Exception), Action="http://tempuri.org/IKhoaService/DeleteExceptionFault", Name="Exception", Namespace="http://schemas.datacontract.org/2004/07/System")]
        bool Delete(string makhoa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKhoaService/Delete", ReplyAction="http://tempuri.org/IKhoaService/DeleteResponse")]
        System.Threading.Tasks.Task<bool> DeleteAsync(string makhoa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKhoaService/GetKhoa", ReplyAction="http://tempuri.org/IKhoaService/GetKhoaResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Exception), Action="http://tempuri.org/IKhoaService/GetKhoaExceptionFault", Name="Exception", Namespace="http://schemas.datacontract.org/2004/07/System")]
        QLHS.KhoaService.KhoaBDO GetKhoa(string makhoa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKhoaService/GetKhoa", ReplyAction="http://tempuri.org/IKhoaService/GetKhoaResponse")]
        System.Threading.Tasks.Task<QLHS.KhoaService.KhoaBDO> GetKhoaAsync(string makhoa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKhoaService/GetAllKhoa", ReplyAction="http://tempuri.org/IKhoaService/GetAllKhoaResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Exception), Action="http://tempuri.org/IKhoaService/GetAllKhoaExceptionFault", Name="Exception", Namespace="http://schemas.datacontract.org/2004/07/System")]
        QLHS.KhoaService.KhoaBDO[] GetAllKhoa();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKhoaService/GetAllKhoa", ReplyAction="http://tempuri.org/IKhoaService/GetAllKhoaResponse")]
        System.Threading.Tasks.Task<QLHS.KhoaService.KhoaBDO[]> GetAllKhoaAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IKhoaServiceChannel : QLHS.KhoaService.IKhoaService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class KhoaServiceClient : System.ServiceModel.ClientBase<QLHS.KhoaService.IKhoaService>, QLHS.KhoaService.IKhoaService {
        
        public KhoaServiceClient() {
        }
        
        public KhoaServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public KhoaServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public KhoaServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public KhoaServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Add(QLHS.KhoaService.KhoaBDO khoa) {
            return base.Channel.Add(khoa);
        }
        
        public System.Threading.Tasks.Task<bool> AddAsync(QLHS.KhoaService.KhoaBDO khoa) {
            return base.Channel.AddAsync(khoa);
        }
        
        public bool Update(QLHS.KhoaService.KhoaBDO khoa) {
            return base.Channel.Update(khoa);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateAsync(QLHS.KhoaService.KhoaBDO khoa) {
            return base.Channel.UpdateAsync(khoa);
        }
        
        public bool Delete(string makhoa) {
            return base.Channel.Delete(makhoa);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAsync(string makhoa) {
            return base.Channel.DeleteAsync(makhoa);
        }
        
        public QLHS.KhoaService.KhoaBDO GetKhoa(string makhoa) {
            return base.Channel.GetKhoa(makhoa);
        }
        
        public System.Threading.Tasks.Task<QLHS.KhoaService.KhoaBDO> GetKhoaAsync(string makhoa) {
            return base.Channel.GetKhoaAsync(makhoa);
        }
        
        public QLHS.KhoaService.KhoaBDO[] GetAllKhoa() {
            return base.Channel.GetAllKhoa();
        }
        
        public System.Threading.Tasks.Task<QLHS.KhoaService.KhoaBDO[]> GetAllKhoaAsync() {
            return base.Channel.GetAllKhoaAsync();
        }
    }
}
